@import '../../app/globals.css';

/* Scoped styles for RichTextEditor */
.editor .ProseMirror {
  min-height: 200px;
}

.editor .ProseMirror:focus,
.editor .ProseMirror:focus-visible {
  outline: none;
  box-shadow: 0 0 0 0 transparent;
  border-color: transparent;
}

/* Placeholder for empty content */
.editor .tiptap .is-editor-empty:first-child::before {
  color: hsl(var(--muted-foreground));
  content: attr(data-placeholder);
  pointer-events: none;
  font-style: italic;
  opacity: 0.7;
}

/* Remove focus outline from the content editable div */
.editor .ProseMirror[contenteditable='true']:focus {
  outline: none;
  box-shadow: none !important;
  border-color: transparent;
}

/* Remove any parent container focus styles */
.editor .ProseMirror-focused {
  outline: none;
  box-shadow: none !important;
}

/* Editor Menu Bar Styles */
.menuBar {
  display: flex;
  align-items: center;
  gap: 0.25rem;
  padding: 0.5rem;
  border-bottom: 1px solid hsl(var(--border));
  background-color: hsl(var(--background) / 0.95);
  backdrop-filter: blur(8px);
  position: sticky;
  top: 0;
  z-index: 10;
}

/* Menu Bar Button Groups */
.menuBar .button-group {
  display: flex;
  align-items: center;
  gap: 0.125rem;
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  border-right: 1px solid hsl(var(--border));
}

.menuBar .button-group:last-child {
  border-right: 0;
}

/* Menu Bar Buttons */
.menuBar button {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 2rem;
  width: 2rem;
  border-radius: 0.125rem;
  font-size: 0.875rem;
  font-weight: 500;
  color: hsl(var(--muted-foreground));
  transition: all 150ms ease-in-out;
  border: none;
  background: transparent;
  cursor: pointer;
}

.menuBar button:hover {
  background-color: hsl(var(--muted));
  color: hsl(var(--foreground));
}

.menuBar button:focus-visible {
  outline: none;
  box-shadow: 0 0 0 2px hsl(var(--ring));
  border-radius: 0.125rem;
}

.menuBar button:disabled {
  pointer-events: none;
  opacity: 0.5;
}

/* Active state for buttons */
.menuBar button.isActive {
  background-color: hsl(var(--primary) / 0.1);
  color: hsl(var(--primary));
}

.menuBar button.isActive:hover {
  background-color: hsl(var(--primary) / 0.2);
}

/* Dropdown/Select in menu bar */
.menuBar select {
  height: 2rem;
  padding: 0.25rem 0.75rem;
  font-size: 0.875rem;
  background-color: hsl(var(--background));
  border: 1px solid hsl(var(--input));
  border-radius: 0.375rem;
}

.menuBar select:focus {
  outline: none;
  box-shadow: 0 0 0 2px hsl(var(--ring));
}

.menuBar select:disabled {
  cursor: not-allowed;
  opacity: 0.5;
}

/* Separator in menu bar */
.menuBar .separator {
  width: 1px;
  height: 1.5rem;
  background-color: hsl(var(--border));
  margin-left: 0.25rem;
  margin-right: 0.25rem;
}

/* Tooltip styles for menu items */
.menuBar [data-tooltip] {
  position: relative;
}

.menuBar [data-tooltip]:hover::after {
  position: absolute;
  bottom: -2rem;
  left: 50%;
  transform: translateX(-50%);
  padding: 0.5rem;
  font-size: 0.75rem;
  color: white;
  background-color: black;
  border-radius: 0.25rem;
  white-space: nowrap;
  pointer-events: none;
  content: attr(data-tooltip);
  z-index: 50;
}

/* Tables */
.editor .ProseMirror table {
  border-collapse: collapse;
  table-layout: auto;
  width: 100%;
}

.editor .ProseMirror td,
.editor .ProseMirror th {
  border: 1px solid hsl(var(--border));
  padding: 0.5rem;
}

.editor .ProseMirror th {
  font-weight: bold;
  background-color: hsl(var(--muted));
}

/* Selected Cell */
.editor .ProseMirror .selectedCell:after {
  position: absolute;
  inset: 0;
  background-color: hsl(var(--primary) / 0.2);
  pointer-events: none;
  content: '';
  z-index: 2;
}

/* Mentions */
.editor .ProseMirror .mention {
  color: hsl(var(--primary));
  font-weight: 500;
}

/* YouTube embeds */
.editor .ProseMirror div[data-youtube-video] {
  position: relative;
  width: 100%;
  border-radius: 0.5rem;
  overflow: hidden;
  background-color: hsl(var(--muted));
  padding-bottom: 56.25%; /* 16:9 aspect ratio */
}

.editor .ProseMirror div[data-youtube-video] > iframe {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
}

/* Image styles */
.editor .ProseMirror img {
  border-radius: 0.5rem;
  max-width: 100%;
  height: auto;
}

/* Image upload states */
.editor .ProseMirror img[data-uploading='true'] {
  opacity: 0.6;
  filter: blur(2px);
  position: relative;
}

.editor .ProseMirror img[data-uploading='true']::after {
  content: 'Uploading...';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: rgba(0, 0, 0, 0.8);
  color: white;
  padding: 0.5rem 1rem;
  border-radius: 0.25rem;
  font-size: 0.875rem;
  font-weight: 500;
  pointer-events: none;
  z-index: 10;
}

.editor .ProseMirror img[data-uploading='error'] {
  opacity: 0.7;
  filter: grayscale(100%) contrast(0.8);
  border: 2px solid #ef4444;
}

.editor .ProseMirror img[data-uploading='error']::after {
  content: 'Upload failed';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: #ef4444;
  color: white;
  padding: 0.5rem 1rem;
  border-radius: 0.25rem;
  font-size: 0.875rem;
  font-weight: 500;
  pointer-events: none;
  z-index: 10;
}

/* Horizontal Rule */
.editor .ProseMirror hr {
  border-top: 1px solid hsl(var(--border));
  margin: 1rem 0;
}

/* Collaboration Cursors */
.editor .collaboration-cursor__caret {
  border-left: 2px solid;
  margin-left: -1px;
  margin-right: -1px;
  pointer-events: none;
  position: relative;
  word-break: normal;
}

.editor .collaboration-cursor__label {
  border-radius: 0.25rem 0.25rem 0.25rem 0;
  color: white;
  font-size: 0.75rem;
  font-weight: 600;
  padding: 0.125rem 0.25rem;
  position: absolute;
  top: -1.25rem;
  left: 0;
  user-select: none;
  white-space: nowrap;
}

/* Slash Command Menu positioning */
.editor .tippy-box {
  background-color: white;
}

.editor .tippy-content {
  padding: 0;
}

/* Slash Command Menu - Global styles since menu is appended to body */
.slash-command-menu {
  background-color: hsl(var(--background));
  border: 1px solid hsl(var(--border));
  border-radius: 0.5rem;
  box-shadow:
    0 10px 15px -3px rgb(0 0 0 / 0.1),
    0 4px 6px -4px rgb(0 0 0 / 0.1);
  overflow: hidden;
  max-height: 20rem;
  width: 17rem;
  justify-content: center;
  align-items: center;
  position: absolute;
  overflow-y: auto;
  z-index: 9999;
}

.slash-command-item {
  display: flex;
  align-items: center;
  min-width: 100%;
  gap: 0.75rem;
  padding: 0.5rem 0.75rem;
  cursor: pointer;
  transition: background-color 150ms;
}

.slash-command-item:hover {
  background-color: hsl(var(--muted));
}

.slash-command-item.is-selected {
  background-color: hsl(var(--muted));
}

.slash-command-item-icon {
  width: 2rem;
  height: 2rem;
  display: flex;
  align-items: center;
  justify-content: center;
  color: hsl(var(--muted-foreground));
}

.slash-command-item-content {
  flex: 1;
}

.slash-command-item-title {
  font-size: 0.875rem;
  font-weight: 500;
}

.slash-command-item-description {
  font-size: 0.75rem;
  color: hsl(var(--muted-foreground));
}

/* Code blocks - target the actual TipTap generated structure */
.editor .code-block {
  background: #787777;
  border-radius: 0.5rem;
  color: #ffffff;
  font-family: 'JetBrains Mono', 'Fira Code', Consolas, monospace;
  margin: 1.5rem 0;
  padding: 0.75rem 1rem;
  font-size: 0.875rem;
  line-height: 1.5;
}

.editor .code-block code {
  background: none;
  color: inherit;
  font-size: 0.8rem;
  padding: 0;
}

/* Syntax highlighting for highlight.js */
.editor .hljs-comment,
.editor .hljs-quote {
  color: #616161;
}

.editor .hljs-variable,
.editor .hljs-template-variable,
.editor .hljs-attribute,
.editor .hljs-tag,
.editor .hljs-regexp,
.editor .hljs-link,
.editor .hljs-name,
.editor .hljs-selector-id,
.editor .hljs-selector-class {
  color: #f98181;
}

.editor .hljs-number,
.editor .hljs-meta,
.editor .hljs-built_in,
.editor .hljs-builtin-name,
.editor .hljs-literal,
.editor .hljs-type,
.editor .hljs-params {
  color: #fbbc88;
}

.editor .hljs-string,
.editor .hljs-symbol,
.editor .hljs-bullet {
  color: #b9f18d;
}

.editor .hljs-title,
.editor .hljs-section {
  color: #faf594;
}

.editor .hljs-keyword,
.editor .hljs-selector-tag {
  color: #70cff8;
}

.editor .hljs-emphasis {
  font-style: italic;
}

.editor .hljs-strong {
  font-weight: 700;
}

/* Editor Content */
.editor {
  outline: none;
}

.editor h1 {
  font-size: 2.25rem;
  font-weight: 700;
  line-height: 2.5rem;
  margin: 1.5rem 0 1rem 0;
}

.editor h2 {
  font-size: 1.875rem;
  font-weight: 600;
  line-height: 2.25rem;
  margin: 1.25rem 0 0.75rem 0;
}

.editor h3 {
  font-size: 1.5rem;
  font-weight: 600;
  line-height: 2rem;
  margin: 1rem 0 0.5rem 0;
}

.editor p {
  margin: 0.75rem 0;
  line-height: 1.625;
}

.editor ul,
.editor ol {
  margin: 0.75rem 0;
  padding-left: 1.5rem;
}

.editor li {
  margin: 0.25rem 0;
}

.editor blockquote {
  border-left: 4px solid hsl(var(--border));
  padding-left: 1rem;
  margin: 1rem 0;
  font-style: italic;
  color: hsl(var(--muted-foreground));
}

.editor code {
  background: hsl(var(--muted));
  padding: 0.125rem 0.25rem;
  border-radius: 0.25rem;
  font-family: 'JetBrains Mono', 'Fira Code', Consolas, monospace;
  font-size: 0.875em;
}

.editor pre {
  background: hsl(var(--muted));
  padding: 1rem;
  border-radius: 0.5rem;
  overflow-x: auto;
  margin: 1rem 0;
}

.editor pre code {
  background: none;
  padding: 0;
  border-radius: 0;
  font-size: 0.875rem;
}

.editor .code-block {
  position: relative;
  background: hsl(var(--muted));
  border-radius: 0.5rem;
  padding: 1rem;
  margin: 1rem 0;
  font-family: 'JetBrains Mono', 'Fira Code', Consolas, monospace;
  overflow-x: auto;
}

.editor img {
  max-width: 100%;
  height: auto;
  border-radius: 0.5rem;
  margin: 1rem 0;
}

.editor a {
  color: hsl(var(--primary));
  text-decoration: underline;
  text-underline-offset: 0.25rem;
}

.editor a:hover {
  text-decoration: none;
}

.editor .mention {
  background: hsl(var(--accent));
  padding: 0.125rem 0.25rem;
  border-radius: 0.25rem;
  font-weight: 500;
}

.editor mark {
  background: hsl(var(--accent));
  padding: 0.125rem 0.25rem;
  border-radius: 0.25rem;
}

/* Old task list styles removed - using beef-task-list instead */

.editor table {
  border-collapse: collapse;
  table-layout: auto;
  width: 100%;
  margin: 1rem 0;
}

.editor table td,
.editor table th {
  border: 1px solid hsl(var(--border));
  padding: 0.5rem;
  text-align: left;
}

.editor table th {
  background: hsl(var(--muted));
  font-weight: 600;
}

.editor hr {
  border: none;
  border-top: 1px solid hsl(var(--border));
  margin: 2rem 0;
}

.editor .youtube-video {
  aspect-ratio: 16 / 9;
  width: 100%;
  border-radius: 0.5rem;
  overflow: hidden;
}

/* List styling */
.editor .bullet-list {
  list-style-type: disc;
  padding-left: 1.5rem;
}

.editor .ordered-list {
  list-style-type: decimal;
  padding-left: 1.5rem;
}

.editor .list-item {
  margin: 0.25rem 0;
}

/* Beef task list styling */
.editor .beef-task-list {
  list-style: none;
  padding-left: 0;
  margin: 1rem 0;
}

.editor .beef-task-list-item {
  display: flex;
  align-items: flex-start;
  gap: 0.5rem;
  margin: 0.25rem 0;
  position: relative;
}

.editor .beef-task-list-item > label {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
  user-select: none;
}

.editor .beef-task-list-item input[type='checkbox'] {
  margin: 0;
  cursor: pointer;
  accent-color: hsl(var(--primary));
  width: 1rem;
  height: 1rem;
}

.editor .beef-task-list-item p {
  margin: 0;
  flex: 1;
}

.editor .beef-task-list-item div {
  flex: 1;
}

.editor .beef-task-list-item > * {
  margin-top: 0;
  margin-bottom: 0;
}

.editor .beef-task-list-item[data-checked='true'] {
  opacity: 0.7;
}

.editor .beef-task-list-item[data-checked='true'] p {
  text-decoration: line-through;
}

/* Screen reader only class */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Table of Contents */
.editor .table-of-contents {
  background: hsl(var(--muted));
  border: 1px solid hsl(var(--border));
  border-radius: 0.5rem;
  padding: 1rem;
  margin: 1rem 0;
}

.editor .table-of-contents h3 {
  margin: 0 0 0.5rem 0;
  font-size: 1rem;
  font-weight: 600;
  color: hsl(var(--foreground));
}

.editor .table-of-contents ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

.editor .table-of-contents li {
  margin: 0.25rem 0;
  padding-left: 0;
}

.editor .table-of-contents a {
  color: hsl(var(--muted-foreground));
  text-decoration: none;
  font-size: 0.875rem;
  transition: color 150ms;
}

.editor .table-of-contents a:hover {
  color: hsl(var(--primary));
}

.editor .table-of-contents li[data-level='1'] {
  font-weight: 600;
}

.editor .table-of-contents li[data-level='2'] {
  padding-left: 1rem;
}

.editor .table-of-contents li[data-level='3'] {
  padding-left: 2rem;
  font-size: 0.8rem;
}

.editor .table-of-contents li[data-level='4'],
.editor .table-of-contents li[data-level='5'],
.editor .table-of-contents li[data-level='6'] {
  padding-left: 3rem;
  font-size: 0.75rem;
  color: hsl(var(--muted-foreground));
}

/* Text color and font family styling */
.editor [data-font-family] {
  font-family: var(--font-family);
}

.editor [data-color] {
  color: var(--color);
}

/* Typography enhancements */
.editor .smart-quote {
  font-feature-settings:
    'kern' 1,
    'liga' 1,
    'calt' 1;
}

/* Bubble menu styles */
.bubble-menu {
  background: hsl(var(--background));
  border: 1px solid hsl(var(--border));
  border-radius: 0.5rem;
  box-shadow:
    0 10px 15px -3px rgb(0 0 0 / 0.1),
    0 4px 6px -4px rgb(0 0 0 / 0.1);
  padding: 0.25rem;
  display: flex;
  gap: 0.125rem;
  z-index: 9999;
}

.bubble-menu button {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2rem;
  height: 2rem;
  border: none;
  background: transparent;
  border-radius: 0.25rem;
  color: hsl(var(--muted-foreground));
  cursor: pointer;
  transition: all 150ms;
}

.bubble-menu button:hover {
  background: hsl(var(--muted));
  color: hsl(var(--foreground));
}

.bubble-menu button.is-active {
  background: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
}

/* Enhanced table styling */
.editor table {
  border-collapse: collapse;
  table-layout: fixed;
  width: 100%;
  margin: 1rem 0;
  overflow: hidden;
}

.editor table td,
.editor table th {
  border: 2px solid hsl(var(--border));
  padding: 0.5rem;
  vertical-align: top;
  box-sizing: border-box;
  position: relative;
  min-width: 1em;
}

.editor table th {
  font-weight: bold;
  text-align: left;
  background-color: hsl(var(--muted));
}

.editor table .selectedCell {
  background: hsl(var(--primary) / 0.2);
}

.editor table .column-resize-handle {
  position: absolute;
  right: -2px;
  top: 0;
  bottom: -2px;
  width: 4px;
  background-color: hsl(var(--primary));
  pointer-events: none;
}

.editor table .resize-cursor {
  cursor: ew-resize;
  cursor: col-resize;
}
