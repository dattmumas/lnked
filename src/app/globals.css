@import "tailwindcss";

@import "tw-animate-css";

/* Removing custom-variant as we rely on standard Tailwind dark mode via CSS variables and .dark class */
/* @custom-variant dark (&:is(.dark *)); */

:root {
  /* Core Theme Tokens */
  --background: oklch(0.98 0.005 240); /* Very light, slightly cool gray */
  --foreground: oklch(
    0.15 0.01 240
  ); /* Very dark, slightly cool gray (off-black) */

  --card: oklch(1 0 0); /* White card background for light mode */
  --card-foreground: var(--foreground); /* Use main foreground for card text */

  --popover: oklch(1 0 0); /* White popover background */
  --popover-foreground: var(
    --foreground
  ); /* Use main foreground for popover text */

  --primary: oklch(0.4 0.15 260); /* Deep Navy Blue */
  --primary-foreground: oklch(
    0.98 0.01 260
  ); /* Light text for on-primary elements */

  --secondary: oklch(0.93 0.01 240); /* Lighter gray for secondary elements */
  --secondary-foreground: oklch(
    0.25 0.01 240
  ); /* Darker gray for text on secondary */

  --muted: oklch(
    0.9 0.01 240
  ); /* Muted gray, e.g., for borders or subtle text */
  --muted-foreground: oklch(
    0.45 0.01 240
  ); /* Text on muted backgrounds or for less emphasis */

  --accent: oklch(0.7 0.22 45); /* Example: A warm gold/yellow for highlights */
  --accent-foreground: oklch(
    0.15 0.02 45
  ); /* Dark text for on-accent elements */

  --destructive: oklch(
    0.55 0.25 15
  ); /* Example: A deep red for destructive actions */
  --destructive-foreground: oklch(0.98 0.01 15);

  --border: oklch(
    0.88 0.01 240
  ); /* Border color, slightly darker than light bg */
  --input: oklch(
    0.95 0.01 240
  ); /* Input field background, slightly off-white/light-gray */
  --ring: var(--primary); /* Focus ring, using primary color */

  --radius: 0.375rem; /* 6px */

  /* Fonts */
  --font-sans: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont,
    "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif,
    "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  --font-serif: "Georgia", Cambria, "Times New Roman", Times, serif;

  /* Sidebar specific - can inherit or be overridden */
  --sidebar: var(--background);
  --sidebar-foreground: var(--foreground);
  --sidebar-border: var(--border);
  /* Retain other existing sidebar variables if they are still used */
  --sidebar-primary: var(--primary);
  --sidebar-primary-foreground: var(--primary-foreground);
  --sidebar-accent: var(--accent);
  --sidebar-accent-foreground: var(--accent-foreground);
  /* --sidebar-border: oklch(0.922 0 0); // This specific value is now var(--border) */
  --sidebar-ring: var(--primary);

  /* Chart colors (can be kept or updated based on new palette) */
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
}

.dark {
  /* Sidebar specific for dark mode */
  --sidebar: var(--background);
  --sidebar-foreground: var(--foreground);
  --sidebar-border: oklch(0.22 0.015 240);
  /* Retain other existing dark sidebar variables if they are still used */
  --sidebar-primary: var(--primary);
  --sidebar-primary-foreground: var(--primary-foreground);
  --sidebar-accent: var(--accent);
  --sidebar-accent-foreground: var(--accent-foreground);
  /* --sidebar-border: oklch(1 0 0 / 10%); // This specific value is now oklch(0.22 0.015 240) or var(--border) */
  --sidebar-ring: var(--primary);

  /* Chart colors for dark mode (can be adjusted) */
  --chart-1: oklch(0.588 0.243 264.376);
  --chart-2: oklch(0.796 0.17 162.48);
  --chart-3: oklch(0.869 0.188 70.08);
  --chart-4: oklch(0.727 0.265 303.9);
  --chart-5: oklch(0.745 0.246 16.439);

  --background: oklch(
    0.12 0.01 240
  ); /* Very dark, slightly cool gray for dark mode bg */
  --foreground: oklch(0.9 0.01 240); /* Light gray text for dark mode */

  --card: oklch(0.17 0.015 240); /* Darker card background */
  --card-foreground: var(--foreground);

  --popover: oklch(0.17 0.015 240); /* Darker popover background */
  --popover-foreground: var(--foreground);

  --primary: oklch(0.6 0.18 260); /* Brighter Navy Blue for dark mode */
  --primary-foreground: oklch(
    0.05 0.01 260
  ); /* Very dark text for on-primary elements in dark */

  --secondary: oklch(0.22 0.015 240); /* Darker gray for secondary */
  --secondary-foreground: oklch(
    0.9 0.01 240
  ); /* Lighter text on dark secondary */

  --muted: oklch(0.2 0.015 240); /* Darker muted gray */
  --muted-foreground: oklch(0.55 0.01 240); /* Lighter muted text */

  --accent: oklch(0.75 0.22 45); /* Brighter gold/yellow for dark mode */
  --accent-foreground: oklch(0.1 0.02 45); /* Dark text for on-accent (dark) */

  --destructive: oklch(
    0.6 0.25 15
  ); /* Brighter red for dark mode destructive */
  --destructive-foreground: oklch(0.98 0.01 15);

  --border: oklch(
    0.25 0.015 240
  ); /* Dark mode border, slightly lighter than dark bg */
  --input: oklch(0.2 0.015 240); /* Dark input background */
  /* --ring already inherits from --primary */
}

/*
  Base styles
  -------------------------------------------------------------------------
  We use CSS variables (see :root above) to hold color tokens that Tailwind
  maps to class names via our tailwind.config.ts.

  Unfortunately `@apply border-border` and `@apply outline-ring/50` are not
  recognised by Tailwind v4 because they are *color-only* utilities without a
  corresponding property (e.g. `border`, `outline`). This triggers the
  "unknown utility class" error and prevents the entire stylesheet from
  compiling, which is why the application renders **unstyled**.

  Instead, we explicitly set the required properties and colours with valid
  utilities. Every element gets the design-system foreground/background and a
  default transparent border that can be styled per-component.
*/

@layer base {
  /* Removed global transparent border on all elements
  * {
    @apply border border-transparent;
  }
  */

  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
    @apply font-sans antialiased; /* Apply base sans-serif font from --font-sans */
  }

  /* Reinstated and updated prose styles */
  .prose {
    /* Base prose colors from foreground */
    color: hsl(var(--foreground));

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      font-family: var(--font-serif); /* Use serif font for prose headings */
      color: hsl(var(--foreground)); /* Ensure headings also use foreground */
      /* Tailwind typography plugin will handle margins, font-sizes, weights based on its config */
    }
    a {
      color: hsl(var(--primary));
      @apply no-underline hover:underline;
    }
    strong {
      color: hsl(var(--foreground));
    }
    blockquote {
      border-left-color: hsl(var(--border));
      color: hsl(var(--muted-foreground));
      background-color: hsl(var(--muted) / 0.5); /* Subtle muted background */
      padding-top: 0.5em; /* Add some padding */
      padding-bottom: 0.5em;
      padding-left: 1em; /* Keep existing left padding for border */
      padding-right: 1em;
      border-radius: var(--radius); /* Consistent radius */
    }
    /* Standfirst / Lead paragraph style */
    > p:first-of-type {
      @apply text-lg italic text-muted-foreground; /* Example: larger, italic, slightly muted */
      /* Or: @apply font-serif text-lg; if a serif lead is preferred */
    }
    code {
      color: hsl(var(--accent-foreground));
      background-color: hsl(var(--accent) / 0.1);
      padding: 0.1em 0.3em;
      border-radius: var(--radius);
      font-size: 0.875em;
    }
    pre code {
      background-color: transparent;
      padding: 0;
      font-size: inherit;
    }
    pre {
      background-color: hsl(var(--muted));
      color: hsl(var(--muted-foreground));
      border-radius: var(--radius);
      border: 1px solid hsl(var(--border));
      padding: 1em;
      overflow-x: auto;
    }
    img {
      max-width: 100%;
      height: auto;
      margin-top: 2em;
      margin-bottom: 2em;
      border-radius: var(--radius);
      border: 1px solid hsl(var(--border)); /* Add thin border to images */
    }
  }
  /* Dark mode for prose is typically handled by Tailwind typography plugin's dark variant or by CSS variable changes.*
  /* If specific overrides are needed for .dark .prose, they can be added here or in tailwind.config.js */
}

/* Tiptap Editor Minimal Styling */
/* Styles for the editable area itself, if not handled by editorProps class */
/* .ProseMirror {
  min-height: 150px; 
} */

/* The focus outline is handled by the wrapper div in TiptapEditor.tsx with focus-within:ring-2 */
/* .ProseMirror:focus {
  outline: none;
} */

/* Placeholder styling for Tiptap - This is specific and generally safe */
.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: hsl(var(--muted-foreground));
  pointer-events: none;
  height: 0;
}

/* Removed specific element overrides like .ProseMirror h1, .ProseMirror p etc. */
/* Rely on the 'prose' classes applied via editorProps in TiptapEditor.tsx */
/* and customize typography via tailwind.config.ts if needed */
