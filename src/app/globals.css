@tailwind base;
@tailwind components;
@tailwind utilities;

@custom-variant dark (&:is(.dark *));

:root {
  --font-inter: "Inter", ui-sans-serif, system-ui, sans-serif;
  --font-source-serif: "Source Serif 4", ui-serif, Georgia, serif;
  --radius: 0.375rem;
  /* spacing tokens based on 8px scale */
  --spacing-xs: 0.5rem; /* 8px */
  --spacing-sm: 1rem; /* 16px */
  --spacing-md: 1.5rem; /* 24px */
  --spacing-lg: 2rem; /* 32px */
  --spacing-xl: 3rem; /* 48px */
  --spacing: var(--spacing-xs);
  /* softened light palette */
  --card: oklch(0.985 0 0);
  --card-foreground: oklch(0.12 0 0);
  --popover: oklch(0.985 0 0);
  --popover-foreground: oklch(0.12 0 0);
  --primary: oklch(0.58 0.18 262);
  --primary-foreground: oklch(0.985 0.01 262);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.72 0.15 203);
  --accent-foreground: oklch(0.145 0.02 203);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.88 0 0);
  --input: oklch(0.922 0 0);
  --ring: var(--primary);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.98 0.01 80);
  --sidebar-foreground: oklch(0.24 0 0);
  --sidebar-primary: var(--primary);
  --sidebar-primary-foreground: var(--primary-foreground);
  --sidebar-accent: var(--accent);
  --sidebar-accent-foreground: var(--accent-foreground);
  --sidebar-border: oklch(0.92 0 0);
  --sidebar-ring: var(--primary);
  --background: oklch(0.98 0.015 82);
  --foreground: oklch(0.24 0.02 262);
}

.dark {
  --background: oklch(0.18 0.015 262);
  --foreground: oklch(0.92 0.01 82);
  --spacing-xs: 0.5rem;
  --spacing-sm: 1rem;
  --spacing-md: 1.5rem;
  --spacing-lg: 2rem;
  --spacing-xl: 3rem;
  --spacing: var(--spacing-xs);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.75 0.16 262);
  --primary-foreground: oklch(0.205 0.05 262);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.8 0.13 203);
  --accent-foreground: oklch(0.145 0.03 203);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(0.3 0 0);
  --input: oklch(1 0 0 / 15%);
  --ring: var(--primary);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: var(--primary);
  --sidebar-primary-foreground: var(--primary-foreground);
  --sidebar-accent: var(--accent);
  --sidebar-accent-foreground: var(--accent-foreground);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: var(--primary);
}

/*
  Base styles
  -------------------------------------------------------------------------
  We use CSS variables (see :root above) to hold color tokens that Tailwind
  maps to class names via our tailwind.config.ts.

  Unfortunately `@apply border-border` and `@apply outline-ring/50` are not
  recognised by Tailwind v4 because they are *color-only* utilities without a
  corresponding property (e.g. `border`, `outline`). This triggers the
  "unknown utility class" error and prevents the entire stylesheet from
  compiling, which is why the application renders **unstyled**.

  Instead, we explicitly set the required properties and colours with valid
  utilities. Every element gets the design-system foreground/background and a
  default transparent border that can be styled per-component.
*/

@layer base {
  html {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @apply text-foreground font-extrabold tracking-tight;
  }

  /* Additional base styles */
  a {
    @apply transition-colors duration-200;
  }

  /* Focus styles for accessibility */
  *:focus-visible {
    @apply outline-none ring-2 ring-ring ring-offset-2 ring-offset-background;
  }

  /* Custom scrollbar for better UX */
  ::-webkit-scrollbar {
    @apply w-2 h-2;
  }

  ::-webkit-scrollbar-track {
    @apply bg-muted;
  }

  ::-webkit-scrollbar-thumb {
    @apply bg-muted-foreground/30 rounded-full hover:bg-muted-foreground/50 transition-colors;
  }
}

/* Tiptap Editor Minimal Styling */
/* Styles for the editable area itself, if not handled by editorProps class */
/* .ProseMirror {
  min-height: 150px;
} */

/* The focus outline is handled by the wrapper div in TiptapEditor.tsx with focus-within:ring-2 */
/* .ProseMirror:focus {
  outline: none;
} */

/* Placeholder styling for Tiptap - This is specific and generally safe */
.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: hsl(var(--muted-foreground)); /* Using a Tailwind variable */
  pointer-events: none;
  height: 0;
}

/* Removed specific element overrides like .ProseMirror h1, .ProseMirror p etc. */
/* Rely on the 'prose' classes applied via editorProps in TiptapEditor.tsx */
/* and customize typography via tailwind.config.ts if needed */

@layer utilities {
  .bg-highlight {
    background-color: hsl(var(--accent) / 0.2);
  }
  .text-highlight {
    color: hsl(var(--accent));
  }
  .img-splash {
    max-width: 100%;
    box-shadow: 0 4px 24px 0 rgba(0, 0, 0, 0.08);
    border-radius: var(--radius);
  }
}

/* Lexical Playground Editor Styles */
.toolbar {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  padding: 8px 12px;
  background: var(--background);
  border-bottom: 1px solid hsl(var(--border));
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
  position: sticky;
  top: 0;
  z-index: 1;
}
.toolbar-item {
  background: none;
  border: none;
  cursor: pointer;
  padding: 4px 8px;
  margin-right: 4px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  color: hsl(var(--muted-foreground));
}
.toolbar-item.spaced {
  margin-right: 8px;
}
.toolbar-item.active {
  background: hsl(var(--muted));
}
.toolbar-item:disabled {
  opacity: 0.4;
  cursor: default;
}
.divider {
  width: 1px;
  height: 20px;
  background-color: hsl(var(--border));
  margin: 0 8px;
}
.toolbar-item .format {
  width: 16px;
  height: 16px;
}

.editor-input {
  outline: none;
  padding: 12px;
  width: 100%;
  min-height: 150px;
  height: 100%;
  box-sizing: border-box;
  background: var(--background);
}
.editor-placeholder {
  position: absolute;
  top: 12px;
  left: 12px;
  color: hsl(var(--muted-foreground));
  font-style: italic;
  pointer-events: none;
}
.editor-paragraph,
.editor-paragraph:last-child {
  margin: 0;
}
.editor-heading-h1 {
  font-size: 1.5em;
  font-weight: bold;
  margin: 0;
  color: hsl(var(--foreground));
}
.editor-heading-h2 {
  font-size: 1.25em;
  font-weight: bold;
  margin: 0;
  color: hsl(var(--foreground));
}
.editor-heading-h3 {
  font-size: 1.1em;
  font-weight: bold;
  margin: 0;
  color: hsl(var(--foreground));
}
.editor-quote {
  margin: 0;
  padding-left: 1em;
  border-left: 4px solid hsl(var(--border));
  color: hsl(var(--muted-foreground));
}
.editor-code {
  margin: 0;
  padding: 4px;
  background: hsl(var(--muted));
  font-family: monospace;
  white-space: pre;
  border-radius: 4px;
}
.editor-list-item {
  margin: 0;
  padding-left: 16px;
  list-style-position: inside;
}
.text-align-left {
  text-align: left;
}
.text-align-center {
  text-align: center;
}
.text-align-right {
  text-align: right;
}

/* Custom Node Styles */

/* Tweet Node */
.tweet-node-container {
  margin: 1rem 0;
  max-width: 550px;
}
.tweet-embed {
  min-height: 150px;
  border: 1px solid hsl(var(--border));
  border-radius: 0.5rem;
  padding: 1rem;
  background-color: hsl(var(--muted));
}
.tweet-loading {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 150px;
  color: hsl(var(--muted-foreground));
}
.tweet-error {
  padding: 1rem;
  color: hsl(var(--destructive));
  border: 1px solid hsl(var(--destructive));
  border-radius: 0.5rem;
}

/* Excalidraw Node */
.excalidraw-node {
  margin: 1rem 0;
  border-radius: 0.5rem;
}
.excalidraw-placeholder,
.excalidraw-loading {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 300px;
  background-color: hsl(var(--muted));
  border: 1px solid hsl(var(--border));
  border-radius: 0.5rem;
  color: hsl(var(--muted-foreground));
}
.excalidraw-wrapper {
  border-radius: 0.5rem;
  overflow: hidden;
}

/* Image Node */
.image-node-container {
  margin: 1rem 0;
  max-width: 100%;
}
.image-node {
  border-radius: 0.5rem;
  max-width: 100%;
  height: auto;
}
.image-node-caption {
  text-align: center;
  color: hsl(var(--muted-foreground));
  font-size: 0.875rem;
  margin-top: 0.5rem;
}
.image-node-error {
  padding: 1rem;
  color: hsl(var(--destructive));
  border: 1px solid hsl(var(--destructive));
  border-radius: 0.5rem;
}

/* YouTube Node */
.youtube-node {
  margin: 1rem 0;
  max-width: 100%;
}
.youtube-embed-container {
  margin: 0 auto;
  max-width: 640px;
}
.youtube-node-error {
  padding: 1rem;
  color: hsl(var(--destructive));
  border: 1px solid hsl(var(--destructive));
  border-radius: 0.5rem;
}

/* Poll Node */
.poll-container {
  margin: 1rem 0;
  padding: 1rem;
  border: 1px solid hsl(var(--border));
  border-radius: 0.5rem;
  background-color: hsl(var(--muted));
}
.poll-question {
  font-weight: bold;
  margin-bottom: 1rem;
}
.poll-options {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}
.poll-option {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}
.poll-option-text {
  flex: 1;
}

/* Sticky Note */
.sticky-note {
  padding: 1rem;
  border-radius: 0.5rem;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  margin: 1rem 0;
}

/* Hashtag */
.hashtag {
  color: hsl(var(--primary));
  font-weight: 500;
}

body {
  height: 100%;
}
