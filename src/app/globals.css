@import "tailwindcss";

@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

:root {
  --radius: 0.625rem;
  --spacing: 0.25rem;
  --card: oklch(1 0 0);
  --card-foreground: oklch(0.145 0 0);
  --popover: oklch(1 0 0);
  --popover-foreground: oklch(0.145 0 0);
  --primary: oklch(0.58 0.18 262);
  --primary-foreground: oklch(0.985 0.01 262);
  --secondary: oklch(0.97 0 0);
  --secondary-foreground: oklch(0.205 0 0);
  --muted: oklch(0.97 0 0);
  --muted-foreground: oklch(0.556 0 0);
  --accent: oklch(0.72 0.15 203);
  --accent-foreground: oklch(0.145 0.02 203);
  --destructive: oklch(0.577 0.245 27.325);
  --border: oklch(0.88 0 0);
  --input: oklch(0.922 0 0);
  --ring: var(--primary);
  --chart-1: oklch(0.646 0.222 41.116);
  --chart-2: oklch(0.6 0.118 184.704);
  --chart-3: oklch(0.398 0.07 227.392);
  --chart-4: oklch(0.828 0.189 84.429);
  --chart-5: oklch(0.769 0.188 70.08);
  --sidebar: oklch(0.985 0 0);
  --sidebar-foreground: oklch(0.145 0 0);
  --sidebar-primary: var(--primary);
  --sidebar-primary-foreground: var(--primary-foreground);
  --sidebar-accent: var(--accent);
  --sidebar-accent-foreground: var(--accent-foreground);
  --sidebar-border: oklch(0.922 0 0);
  --sidebar-ring: var(--primary);
  --background: oklch(1 0 0);
  --foreground: oklch(0.145 0 0);
}

.dark {
  --background: oklch(0.145 0 0);
  --foreground: oklch(0.985 0 0);
  --card: oklch(0.205 0 0);
  --card-foreground: oklch(0.985 0 0);
  --popover: oklch(0.205 0 0);
  --popover-foreground: oklch(0.985 0 0);
  --primary: oklch(0.75 0.16 262);
  --primary-foreground: oklch(0.205 0.05 262);
  --secondary: oklch(0.269 0 0);
  --secondary-foreground: oklch(0.985 0 0);
  --muted: oklch(0.269 0 0);
  --muted-foreground: oklch(0.708 0 0);
  --accent: oklch(0.8 0.13 203);
  --accent-foreground: oklch(0.145 0.03 203);
  --destructive: oklch(0.704 0.191 22.216);
  --border: oklch(0.3 0 0);
  --input: oklch(1 0 0 / 15%);
  --ring: var(--primary);
  --chart-1: oklch(0.488 0.243 264.376);
  --chart-2: oklch(0.696 0.17 162.48);
  --chart-3: oklch(0.769 0.188 70.08);
  --chart-4: oklch(0.627 0.265 303.9);
  --chart-5: oklch(0.645 0.246 16.439);
  --sidebar: oklch(0.205 0 0);
  --sidebar-foreground: oklch(0.985 0 0);
  --sidebar-primary: var(--primary);
  --sidebar-primary-foreground: var(--primary-foreground);
  --sidebar-accent: var(--accent);
  --sidebar-accent-foreground: var(--accent-foreground);
  --sidebar-border: oklch(1 0 0 / 10%);
  --sidebar-ring: var(--primary);
}

/*
  Base styles
  -------------------------------------------------------------------------
  We use CSS variables (see :root above) to hold color tokens that Tailwind
  maps to class names via our tailwind.config.ts.

  Unfortunately `@apply border-border` and `@apply outline-ring/50` are not
  recognised by Tailwind v4 because they are *color-only* utilities without a
  corresponding property (e.g. `border`, `outline`). This triggers the
  "unknown utility class" error and prevents the entire stylesheet from
  compiling, which is why the application renders **unstyled**.

  Instead, we explicitly set the required properties and colours with valid
  utilities. Every element gets the design-system foreground/background and a
  default transparent border that can be styled per-component.
*/

@layer base {
  /* Removed global transparent border on all elements
  * {
    @apply border border-transparent;
  }
  */

  body {
    background-color: #f7f7f7;
    color: #1f1f1f;
    @apply antialiased;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    color: #1f1f1f;
    font-weight: 800;
    letter-spacing: -0.01em;
  }

  /* Prose style customizations REMOVED FOR NOW to restore base styling 
  .prose {
    h1, h2, h3, h4, h5, h6 {
      @apply font-serif text-foreground;
    }
    a {
      @apply text-primary hover:underline;
    }
  }

  .prose-invert {
    h1, h2, h3, h4, h5, h6 {
      @apply font-serif text-foreground;
    }
    a {
      @apply text-primary hover:underline;
    }
  }
  */
}

/* Tiptap Editor Minimal Styling */
/* Styles for the editable area itself, if not handled by editorProps class */
/* .ProseMirror {
  min-height: 150px; 
} */

/* The focus outline is handled by the wrapper div in TiptapEditor.tsx with focus-within:ring-2 */
/* .ProseMirror:focus {
  outline: none;
} */

/* Placeholder styling for Tiptap - This is specific and generally safe */
.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: hsl(var(--muted-foreground)); /* Using a Tailwind variable */
  pointer-events: none;
  height: 0;
}

/* Removed specific element overrides like .ProseMirror h1, .ProseMirror p etc. */
/* Rely on the 'prose' classes applied via editorProps in TiptapEditor.tsx */
/* and customize typography via tailwind.config.ts if needed */

@layer utilities {
  .bg-highlight {
    background-color: #ffca28;
  }
  .text-highlight {
    color: #ffca28;
  }
  .img-splash {
    max-width: 100%;
    box-shadow: 0 4px 24px 0 rgba(0, 0, 0, 0.08), 0 1.5px 0 0 #ffca28;
    border-radius: 0.5rem;
  }
}
